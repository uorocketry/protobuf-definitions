syntax = "proto3";

package RocketryProto;

enum EventTypes
{
    RESET = 0;
    SERVO_INIT = 1;
    SERVO_CONTROL = 2;
    DIGITAL_INIT = 3;
    DIGITAL_CONTROL = 4;
    DC_MOTOR_INIT = 5;
    DC_MOTOR_CONTROL = 6;
}

enum ErrorTypes
{
    DECODE_ERROR = 0;
    UNKNOWN_MESSAGE = 1;
    PIN_NOT_INITIALIZED = 2;
}

message EventMessage
{
    EventTypes type = 1;
    int32 data = 2;
}

message ErrorMessage
{
    ErrorTypes type = 1;
    int32 data = 2;
}

message ServoState
{
    uint32 pin = 1;
    int32 position = 2;
}

message DigitalState
{
    uint32 pin = 1;
    bool activated = 2;
}

message DCMotorState
{
    uint32 motorForwardPin = 1;
    uint32 motorReversePin = 2;
    int32 position = 3;
    int32 direction = 4;
    bool minLimitSwitch = 5;
    bool maxLimitSwitch = 6;
}

message ServoInit
{
    uint32 pin = 1;
    int32 safePosition = 2;
}

message ServoControl
{
    uint32 pin = 1;
    int32 position = 2;
}

message DigitalInit
{
    uint32 pin = 1;
    uint32 safeState = 2;
}

message DigitalControl
{
    uint32 pin = 1;
    bool activate = 2;
}


message DCMotorInit
{
    uint32 limitSwitchMinPin = 1;
    uint32 limitSwitchMaxPin = 2;
    uint32 potentiometerPin = 3;
    uint32 motorForwardPin = 4;
    uint32 motorReversePin = 5;
    uint32 motorPower = 6;
}

message DCMotorControl
{
    uint32 pinForward = 1;
    uint32 pinReverse = 2;
    int32 position = 3;
}

message Reset
{
}

message ArduinoIn
{
    oneof data
    {
        ServoInit servoInit = 1;
        ServoControl servoControl = 2;
        DigitalInit digitalInit = 3;
        DigitalControl digitalControl = 4;
        DCMotorInit dcMotorInit = 6;
        DCMotorControl dcMotorControl = 7;
        Reset reset = 5;
    }
}

message ArduinoOut
{
    oneof data
    {
        EventMessage eventMessage = 1;
        ErrorMessage errorMessage = 2;
        ServoState servoState = 3;
        DigitalState digitalState = 4;
        DCMotorState dcMotorState = 5;
    }
}